diff --git b/fw_flowmanager.c a/fw_flowmanager.c
index ebc31995..97486898 100644
--- b/fw_flowmanager.c
+++ a/fw_flowmanager.c
@@ -68,21 +68,12 @@ void flow_manager_allocate_or_refresh_flow(struct FlowManager *manager,
 }
 
 void flow_manager_expire(struct FlowManager *manager, vigor_time_t time) {
-  if (time < manager->expiration_time)
-    return; // nothing can expire yet
-  // This is convoluted - we want to make sure the sanitization doesn't
-  // extend our vigor_time_t value in 128 bits, which would confuse the
-  // validator. So we "prove" by hand that it's OK...
-  if (time < 0)
-    return; // we don't support the past
-  assert(sizeof(vigor_time_t) <= sizeof(int64_t));
-  uint64_t time_u = (uint64_t)time; // OK since assert above passed and time > 0
-  uint64_t last_time_u =
-      time_u - manager->expiration_time *
-                   1000; // OK because time >= expiration_time >= 0
-  assert(sizeof(int64_t) <= sizeof(vigor_time_t));
-  vigor_time_t last_time =
-      (vigor_time_t)last_time_u; // OK since the assert above passed
+  assert(time >= 0); // we don't support the past
+  assert(sizeof(vigor_time_t) <= sizeof(uint64_t));
+  uint64_t time_u = (uint64_t)time; // OK because of the two asserts
+  vigor_time_t last_time = time_u - manager->expiration_time * 1000; // us to ns
+  expire_items_single_map(manager->state->heap, manager->state->fv,
+                          manager->state->fm, last_time);
 }
 
 bool flow_manager_get_refresh_flow(struct FlowManager *manager,
